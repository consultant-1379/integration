{{ if or (index .Values "tags" "eric-pm-server") (index .Values "tags" "eric-adp-common") }}
{{ if ( eq ( index .Values "eric-pm-server" "server" "configMapOverrideName" ) "eric-adp-5g-udm-pm-server-config") }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: eric-adp-5g-udm-pm-server-config
  labels:
{{- include "eric-adp-5g-udm.labels" . | indent 4 }}
  annotations:
{{- include "eric-adp-5g-udm.product-info" . | indent 4 }}
data:
  eric-nrfagent-rules.yml: |
    groups:
      - name: eric_nrfagent
        rules:
          - record: remoteendpoint_statuscode:eric_nrfagent_discovery_unsuccessful_responses_sent:ratio
            expr: |2
              sum(delta(eric_nrfagent_discovery_unsuccessful_responses_sent[1m])) by (remote_endpoint,status_code)
              /
              ignoring(status_code) group_left sum(delta(eric_nrfagent_discovery_requests_recv[1m])> 0 ) by (remote_endpoint) * 100
          - record: remoteendpoint_statuscode:eric_svc_routing_agent_unsuccessful_responses_sent:ratio
            expr: |2
              sum(delta(eric_svc_routing_agent_unsuccessful_responses_sent[1m])) by (remote_endpoint,status_code)
              /
              ignoring(status_code) group_left sum(delta(eric_svc_routing_agent_requests_recv[1m])> 0 ) by (remote_endpoint) * 100
          - record: remoteendpoint_statuscode:eric_nrfagent_discovery_nnrf_disc_unsuccessful_responses_recv:ratio
            expr: |2
              sum(delta(eric_nrfagent_nnrf_disc_unsuccessful_responses_recv{nf_service_id="eric-nrfagent-discovery"}[1m])) by (remote_endpoint,status_code)
              /
              ignoring(status_code) group_left sum(delta(eric_nrfagent_nnrf_disc_requests_sent{nf_service_id="eric-nrfagent-discovery"}[1m])> 0 ) by (remote_endpoint) * 100
          - record: remoteendpoint_statuscode:eric_nrfagent_register_nnrf_disc_unsuccessful_responses_recv:ratio
            expr: |2
              sum(delta(eric_nrfagent_nnrf_disc_unsuccessful_responses_recv{nf_service_id="eric-nrfagent-register"}[1m])) by (remote_endpoint,status_code)
              /
              ignoring(status_code) group_left sum(delta(eric_nrfagent_nnrf_disc_requests_sent{nf_service_id="eric-nrfagent-register"}[1m])> 0 ) by (remote_endpoint) * 100
          - record: remoteendpoint_statuscode:eric_nrfagent_discovery_nnrf_nfm_unsuccessful_responses_recv:ratio
            expr: |2
              sum(delta(eric_nrfagent_nnrf_nfm_unsuccessful_responses_recv{nf_service_id="eric-nrfagent-discovery"}[1m])) by (remote_endpoint,status_code)
              /
              ignoring(status_code) group_left sum(delta(eric_nrfagent_nnrf_nfm_requests_sent{nf_service_id="eric-nrfagent-discovery"}[1m])> 0 ) by (remote_endpoint) * 100
          - record: remoteendpoint_statuscode:eric_nrfagent_register_nnrf_nfm_unsuccessful_responses_recv:ratio
            expr: |2
              sum(delta(eric_nrfagent_nnrf_nfm_unsuccessful_responses_recv{nf_service_id="eric-nrfagent-register"}[1m])) by (remote_endpoint,status_code)
              /
              ignoring(status_code) group_left sum(delta(eric_nrfagent_nnrf_nfm_requests_sent{nf_service_id="eric-nrfagent-register"}[1m])> 0 ) by (remote_endpoint) * 100
          - record: remoteendpoint_statuscode:eric_nrfagent_accesstoken_nnrf_oauth2_unsuccessful_responses_recv:ratio
            expr: |2
              sum(delta(eric_nrfagent_nnrf_oauth2_unsuccessful_responses_recv{nf_service_id="eric-nrfagent-accesstoken"}[1m])) by (remote_endpoint,status_code)
              /
              ignoring(status_code) group_left sum(delta(eric_nrfagent_nnrf_oauth2_requests_sent{nf_service_id="eric-nrfagent-accesstoken"}[1m])> 0 ) by (remote_endpoint) * 100
          - record: remoteendpoint_detailedinfo:eric_nrfagent_discovery_unsuccessful_responses_sent:ratio
            expr: |2
              sum(delta(eric_nrfagent_discovery_unsuccessful_responses_sent[1m])) by (remote_endpoint,detailed_info)
              /
              ignoring(detailed_info) group_left sum(delta(eric_nrfagent_discovery_requests_recv[1m])> 0 ) by (remote_endpoint) * 100
          - record: remoteendpoint_detailedinfo:eric_svc_routing_agent_unsuccessful_responses_sent:ratio
            expr: |2
              sum(delta(eric_svc_routing_agent_unsuccessful_responses_sent[1m])) by (remote_endpoint,detailed_info)
              /
              ignoring(detailed_info) group_left sum(delta(eric_svc_routing_agent_requests_recv[1m])> 0 ) by (remote_endpoint) * 100
          - record: remoteendpoint_detailedinfo:eric_nrfagent_discovery_nnrf_disc_unsuccessful_responses_recv:ratio
            expr: |2
              sum(delta(eric_nrfagent_nnrf_disc_unsuccessful_responses_recv{nf_service_id="eric-nrfagent-discovery"}[1m])) by (remote_endpoint,detailed_info)
              /
              ignoring(detailed_info) group_left sum(delta(eric_nrfagent_nnrf_disc_requests_sent{nf_service_id="eric-nrfagent-discovery"}[1m])> 0 ) by (remote_endpoint) * 100
          - record: remoteendpoint_detailedinfo:eric_nrfagent_register_nnrf_disc_unsuccessful_responses_recv:ratio
            expr: |2
              sum(delta(eric_nrfagent_nnrf_disc_unsuccessful_responses_recv{nf_service_id="eric-nrfagent-register"}[1m])) by (remote_endpoint,detailed_info)
              /
              ignoring(detailed_info) group_left sum(delta(eric_nrfagent_nnrf_disc_requests_sent{nf_service_id="eric-nrfagent-register"}[1m])> 0 ) by (remote_endpoint) * 100
          - record: remoteendpoint_detailedinfo:eric_nrfagent_discovery_nnrf_nfm_unsuccessful_responses_recv:ratio
            expr: |2
              sum(delta(eric_nrfagent_nnrf_nfm_unsuccessful_responses_recv{nf_service_id="eric-nrfagent-discovery"}[1m])) by (remote_endpoint,detailed_info)
              /
              ignoring(detailed_info) group_left sum(delta(eric_nrfagent_nnrf_nfm_requests_sent{nf_service_id="eric-nrfagent-discovery"}[1m])> 0 ) by (remote_endpoint) * 100
          - record: remoteendpoint_detailedinfo:eric_nrfagent_register_nnrf_nfm_unsuccessful_responses_recv:ratio
            expr: |2
              sum(delta(eric_nrfagent_nnrf_nfm_unsuccessful_responses_recv{nf_service_id="eric-nrfagent-register"}[1m])) by (remote_endpoint,detailed_info)
              /
              ignoring(detailed_info) group_left sum(delta(eric_nrfagent_nnrf_nfm_requests_sent{nf_service_id="eric-nrfagent-register"}[1m])> 0 ) by (remote_endpoint) * 100
          - record: remoteendpoint_detailedinfo:eric_nrfagent_accesstoken_nnrf_oauth2_unsuccessful_responses_recv:ratio
            expr: |2
              sum(delta(eric_nrfagent_nnrf_oauth2_unsuccessful_responses_recv{nf_service_id="eric-nrfagent-accesstoken"}[1m])) by (remote_endpoint,detailed_info)
              /
              ignoring(detailed_info) group_left sum(delta(eric_nrfagent_nnrf_oauth2_requests_sent{nf_service_id="eric-nrfagent-accesstoken"}[1m])> 0 ) by (remote_endpoint) * 100
          - record: remoteendpoint:eric_nrfagent_discovery_unsuccessful_responses_sent:ratio
            expr: |2
              sum(delta(eric_nrfagent_discovery_unsuccessful_responses_sent[1m])) by (remote_endpoint)
              /
              sum(delta(eric_nrfagent_discovery_requests_recv[1m])> 0 ) by (remote_endpoint) * 100
          - record: remoteendpoint:eric_svc_routing_agent_unsuccessful_responses_sent:ratio
            expr: |2
              sum(delta(eric_svc_routing_agent_unsuccessful_responses_sent[1m])) by (remote_endpoint)
              /
              sum(delta(eric_svc_routing_agent_requests_recv[1m])> 0 ) by (remote_endpoint) * 100
          - record: remoteendpoint:eric_nrfagent_discovery_nnrf_disc_unsuccessful_responses_recv:ratio
            expr: |2
              sum(delta(eric_nrfagent_nnrf_disc_unsuccessful_responses_recv{nf_service_id="eric-nrfagent-discovery"}[1m])) by (remote_endpoint)
              /
              sum(delta(eric_nrfagent_nnrf_disc_requests_sent{nf_service_id="eric-nrfagent-discovery"}[1m])> 0 ) by (remote_endpoint) * 100
          - record: remoteendpoint:eric_nrfagent_register_nnrf_disc_unsuccessful_responses_recv:ratio
            expr: |2
              sum(delta(eric_nrfagent_nnrf_disc_unsuccessful_responses_recv{nf_service_id="eric-nrfagent-register"}[1m])) by (remote_endpoint)
              /
              sum(delta(eric_nrfagent_nnrf_disc_requests_sent{nf_service_id="eric-nrfagent-register"}[1m])> 0 ) by (remote_endpoint) * 100
          - record: remoteendpoint:eric_nrfagent_discovery_nnrf_nfm_unsuccessful_responses_recv:ratio
            expr: |2
              sum(delta(eric_nrfagent_nnrf_nfm_unsuccessful_responses_recv{nf_service_id="eric-nrfagent-discovery"}[1m])) by (remote_endpoint)
              /
              sum(delta(eric_nrfagent_nnrf_nfm_requests_sent{nf_service_id="eric-nrfagent-discovery"}[1m])> 0 ) by (remote_endpoint) * 100
          - record: remoteendpoint:eric_nrfagent_register_nnrf_nfm_unsuccessful_responses_recv:ratio
            expr: |2
              sum(delta(eric_nrfagent_nnrf_nfm_unsuccessful_responses_recv{nf_service_id="eric-nrfagent-register"}[1m])) by (remote_endpoint)
              /
              sum(delta(eric_nrfagent_nnrf_nfm_requests_sent{nf_service_id="eric-nrfagent-register"}[1m])> 0 ) by (remote_endpoint) * 100
          - record: remoteendpoint:eric_nrfagent_accesstoken_nnrf_oauth2_unsuccessful_responses_recv:ratio
            expr: |2
              sum(delta(eric_nrfagent_nnrf_oauth2_unsuccessful_responses_recv{nf_service_id="eric-nrfagent-accesstoken"}[1m])) by (remote_endpoint)
              /
              sum(delta(eric_nrfagent_nnrf_oauth2_requests_sent{nf_service_id="eric-nrfagent-accesstoken"}[1m])> 0 ) by (remote_endpoint) * 100
          - record: statuscode:eric_nrfagent_discovery_unsuccessful_responses_sent:ratio
            expr: |2
              sum(delta(eric_nrfagent_discovery_unsuccessful_responses_sent[1m])) by (status_code)
              /
              ignoring(status_code) group_left sum(delta(eric_nrfagent_discovery_requests_recv[1m])> 0 ) * 100
          - record: statuscode:eric_svc_routing_agent_unsuccessful_responses_sent:ratio
            expr: |2
              sum(delta(eric_svc_routing_agent_unsuccessful_responses_sent[1m])) by (status_code)
              /
              ignoring(status_code) group_left sum(delta(eric_svc_routing_agent_requests_recv[1m])> 0 ) * 100
          - record: statuscode:eric_nrfagent_discovery_nnrf_disc_unsuccessful_responses_recv:ratio
            expr: |2
              sum(delta(eric_nrfagent_nnrf_disc_unsuccessful_responses_recv{nf_service_id="eric-nrfagent-discovery"}[1m])) by (status_code)
              /
              ignoring(status_code) group_left sum(delta(eric_nrfagent_nnrf_disc_requests_sent{nf_service_id="eric-nrfagent-discovery"}[1m])> 0 ) * 100
          - record: statuscode:eric_nrfagent_register_nnrf_disc_unsuccessful_responses_recv:ratio
            expr: |2
              sum(delta(eric_nrfagent_nnrf_disc_unsuccessful_responses_recv{nf_service_id="eric-nrfagent-register"}[1m])) by (status_code)
              /
              ignoring(status_code) group_left sum(delta(eric_nrfagent_nnrf_disc_requests_sent{nf_service_id="eric-nrfagent-register"}[1m])> 0 ) * 100
          - record: statuscode:eric_nrfagent_discovery_nnrf_nfm_unsuccessful_responses_recv:ratio
            expr: |2
              sum(delta(eric_nrfagent_nnrf_nfm_unsuccessful_responses_recv{nf_service_id="eric-nrfagent-discovery"}[1m])) by (status_code)
              /
              ignoring(status_code) group_left sum(delta(eric_nrfagent_nnrf_nfm_requests_sent{nf_service_id="eric-nrfagent-discovery"}[1m])> 0 ) * 100
          - record: statuscode:eric_nrfagent_register_nnrf_nfm_unsuccessful_responses_recv:ratio
            expr: |2
              sum(delta(eric_nrfagent_nnrf_nfm_unsuccessful_responses_recv{nf_service_id="eric-nrfagent-register"}[1m])) by (status_code)
              /
              ignoring(status_code) group_left sum(delta(eric_nrfagent_nnrf_nfm_requests_sent{nf_service_id="eric-nrfagent-register"}[1m])> 0 ) * 100
          - record: statuscode:eric_nrfagent_accesstoken_nnrf_oauth2_unsuccessful_responses_recv:ratio
            expr: |2
              sum(delta(eric_nrfagent_nnrf_oauth2_unsuccessful_responses_recv{nf_service_id="eric-nrfagent-accesstoken"}[1m])) by (status_code)
              /
              ignoring(status_code) group_left sum(delta(eric_nrfagent_nnrf_oauth2_requests_sent{nf_service_id="eric-nrfagent-accesstoken"}[1m])> 0 ) * 100
          - record: detailedinfo:eric_nrfagent_discovery_unsuccessful_responses_sent:ratio
            expr: |2
              sum(delta(eric_nrfagent_discovery_unsuccessful_responses_sent[1m])) by (detailed_info)
              /
              ignoring(detailed_info) group_left sum(delta(eric_nrfagent_discovery_requests_recv[1m])> 0 ) * 100
          - record: detailedinfo:eric_svc_routing_agent_unsuccessful_responses_sent:ratio
            expr: |2
              sum(delta(eric_svc_routing_agent_unsuccessful_responses_sent[1m])) by (detailed_info)
              /
              ignoring(detailed_info) group_left sum(delta(eric_svc_routing_agent_requests_recv[1m])> 0 ) * 100
          - record: detailedinfo:eric_nrfagent_discovery_nnrf_disc_unsuccessful_responses_recv:ratio
            expr: |2
              sum(delta(eric_nrfagent_nnrf_disc_unsuccessful_responses_recv{nf_service_id="eric-nrfagent-discovery"}[1m])) by (detailed_info)
              /
              ignoring(detailed_info) group_left sum(delta(eric_nrfagent_nnrf_disc_requests_sent{nf_service_id="eric-nrfagent-discovery"}[1m])> 0 ) * 100
          - record: detailedinfo:eric_nrfagent_register_nnrf_disc_unsuccessful_responses_recv:ratio
            expr: |2
              sum(delta(eric_nrfagent_nnrf_disc_unsuccessful_responses_recv{nf_service_id="eric-nrfagent-register"}[1m])) by (detailed_info)
              /
              ignoring(detailed_info) group_left sum(delta(eric_nrfagent_nnrf_disc_requests_sent{nf_service_id="eric-nrfagent-register"}[1m])> 0 ) * 100
          - record: detailedinfo:eric_nrfagent_discovery_nnrf_nfm_unsuccessful_responses_recv:ratio
            expr: |2
              sum(delta(eric_nrfagent_nnrf_nfm_unsuccessful_responses_recv{nf_service_id="eric-nrfagent-discovery"}[1m])) by (detailed_info)
              /
              ignoring(detailed_info) group_left sum(delta(eric_nrfagent_nnrf_nfm_requests_sent{nf_service_id="eric-nrfagent-discovery"}[1m])> 0 ) * 100
          - record: detailedinfo:eric_nrfagent_register_nnrf_nfm_unsuccessful_responses_recv:ratio
            expr: |2
              sum(delta(eric_nrfagent_nnrf_nfm_unsuccessful_responses_recv{nf_service_id="eric-nrfagent-register"}[1m])) by (detailed_info)
              /
              ignoring(detailed_info) group_left sum(delta(eric_nrfagent_nnrf_nfm_requests_sent{nf_service_id="eric-nrfagent-register"}[1m])> 0 ) * 100
          - record: detailedinfo:eric_nrfagent_accesstoken_nnrf_oauth2_unsuccessful_responses_recv:ratio
            expr: |2
              sum(delta(eric_nrfagent_nnrf_oauth2_unsuccessful_responses_recv{nf_service_id="eric-nrfagent-accesstoken"}[1m])) by (detailed_info)
              /
              ignoring(detailed_info) group_left sum(delta(eric_nrfagent_nnrf_oauth2_requests_sent{nf_service_id="eric-nrfagent-accesstoken"}[1m])> 0 ) * 100
  eric-5gc-system-rules.yml: |
    groups:
      - name: eric_5gc_system
        rules:
          - record: pod:eric_5gc_system_cpu_usage:percent
            expr: |2
              sum(pmrm_container_cpu_usage_nanocore) by (pod,kubernetes_namespace)
              /
              sum(pmrm_container_cpu_limits_nanocore > 0) by (pod,kubernetes_namespace) * 100
          - record: pod:eric_5gc_system_memory_usage:percent
            expr: |2
              sum(pmrm_container_mem_usage_bytes) by (pod,kubernetes_namespace)
              /
              sum(pmrm_container_mem_limits_bytes > 0) by (pod,kubernetes_namespace) * 100
      - name: remote_write
        interval: 10s
        rules:
          - expr: prometheus_remote_storage_samples_total - prometheus_remote_storage_samples_retried_total
            record: prometheus_remote_storage_unknown_status_samples_total
          - expr: rate(prometheus_remote_storage_unknown_status_samples_total[1m])
            record: prometheus_remote_storage_succeeded_rate_samples_total
{{- if (index .Values "eric-pm-server" "ruleFiles") }}
{{ tpl (toYaml (index .Values "eric-pm-server" "ruleFiles") | indent 2) . }}
{{- end }}
  prometheus.yml: |
    global:
      scrape_interval: 15s
      scrape_timeout: 10s
      evaluation_interval: 1m
    remote_write:
    {{ if ( eq ( index .Values "eric-odca-diagnostic-data-collector" "ddcRemoteWrite" "enabled" ) true) }}
      - url: 'http://eric-odca-diagnostic-data-collector:50050/receive'
        write_relabel_configs:
          - source_labels: [job]
            regex: 'kubernetes-.*'
            action: drop
          - source_labels: [ddc_job]
            regex: 'kubernetes-.*'
            action: drop
          - source_labels: [scrape_job]
            regex: 'kubernetes-.*'
            action: drop
    {{- end }}
{{- $pm := (index .Values "eric-pm-server") }}
{{- if $pm.externalRemoteWrite }}
{{- if ( eq ( index .Values "eric-pm-server" "limitRWDestionations" ) false) }}
{{ toYaml $pm.externalRemoteWrite | indent 6 }}
{{- end }}
{{- if ( eq ( index .Values "eric-pm-server" "limitRWDestionations" ) true) }}
{{- $pm1 := (index $pm.externalRemoteWrite 0) }}
{{ toYaml $pm1 | indent 6 }}
{{- end }}
{{- end }}
    rule_files:
      - eric-nrfagent-rules.yml
      - eric-5gc-system-rules.yml
    {{- if (index .Values "eric-pm-server" "ruleFiles") }}
      {{- range $key, $val := (index .Values "eric-pm-server" "ruleFiles") }}
      - {{ $key | trim }}
      {{- end }}
    {{- end }}
    scrape_configs:
      - job_name: eric-pm-server
        scrape_interval: 15s
        scrape_timeout: 10s
        metrics_path: {{ template "eric-adp-5g-udm.eric-pm-server.prefix" . }}/metrics
        kubernetes_sd_configs:
          - role: pod
            namespaces:
              names:
                - {{ .Release.Namespace }}
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_label_app_kubernetes_io_name]
            regex: {{ template "eric-adp-5g-udm.eric-pm-server.name" .}}
            action: keep
          - source_labels: [__address__]
            regex: ".*:\\d+"
            action: keep
          - source_labels: [__meta_kubernetes_pod_container_port_name]
            regex: "http-metrics.*"
            action: keep
          - source_labels: [__meta_kubernetes_namespace]
            action: replace
            target_label: namespace
          - source_labels: [__meta_kubernetes_pod_label_app_kubernetes_io_name]
            action: replace
            target_label: service_name
          - source_labels: [__meta_kubernetes_pod_name]
            action: replace
            target_label: pod_name
          - source_labels: [__meta_kubernetes_pod_phase]
            regex: Pending|Succeeded|Failed|Completed
            action: drop
          - source_labels:
            - __meta_kubernetes_pod_annotation_prometheus_io_node_label
            - __meta_kubernetes_pod_node_name
            regex: "true;(.*)"
            replacement: $1
            target_label: node_name

{{- if .Values.global.security.tls.enabled }}
      - job_name: tls-targets
        scheme: https
        tls_config:
          ca_file: /run/secrets/cacert/cacertbundle.pem
          cert_file: /run/secrets/clicert/clicert.pem
          key_file: /run/secrets/clicert/cliprivkey.pem
          server_name: certified-scrape-target
          insecure_skip_verify: false
        kubernetes_sd_configs:
          - role: endpoints
            namespaces:
              names:
                - {{ .Release.Namespace }}
        relabel_configs:
          - source_labels: [__meta_kubernetes_service_name]
            action: replace
            target_label: job
          - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]
            action: keep
            regex: true
          - source_labels: [__meta_kubernetes_endpoint_port_name]
            action: keep
            regex: (.*-tls)
          - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
            action: replace
            target_label: __scheme__
            regex: (https?)
          - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
            action: replace
            target_label: __metrics_path__
            regex: (.+)
          - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
            action: replace
            target_label: __address__
            regex: ((?:\[.+\])|(?:.+))(?::\d+);(\d+)
            replacement: $1:$2
          - action: labelmap
            regex: __meta_kubernetes_service_label_(.+)
          - source_labels: [__meta_kubernetes_namespace]
            action: replace
            target_label: kubernetes_namespace
          - source_labels: [__meta_kubernetes_service_name]
            action: replace
            target_label: kubernetes_name
      - job_name: 'tls-pod-targets'
        scheme: https
        tls_config:
          ca_file: /run/secrets/cacert/cacertbundle.pem
          cert_file: /run/secrets/clicert/clicert.pem
          key_file: /run/secrets/clicert/cliprivkey.pem
          server_name: certified-scrape-target
          insecure_skip_verify: false
        kubernetes_sd_configs:
          - role: pod
            namespaces:
              names:
                - {{ .Release.Namespace }}
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
            action: keep
            regex: true
          - source_labels: [__meta_kubernetes_pod_container_port_name]
            action: keep
            regex: (.*-tls)
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
            action: replace
            target_label: __metrics_path__
            regex: (.+)
          - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
            action: replace
            regex: ((?:\[.+\])|(?:.+))(?::\d+);(\d+)
            replacement: $1:$2
            target_label: __address__
          - action: labelmap
            regex: __meta_kubernetes_pod_label_(.+)
          - source_labels: [__meta_kubernetes_namespace]
            action: replace
            target_label: kubernetes_namespace
          - source_labels: [__meta_kubernetes_pod_name]
            action: replace
            target_label: kubernetes_pod_name
{{- end }}
{{ if (index .Values "eric-pm-server" "pmJobs") -}}
{{ tpl ((index .Values "eric-pm-server" "pmJobs") | indent 6) . }}
{{- end }}
{{ if ( eq ( index .Values "eric-pm-server" "rbac" "appMonitoring" "enabled" ) true) }}
{{ if ( eq ( index .Values "eric-pm-server" "rbac" "appMonitoring" "federation" "jobOverride") false) }}
      - job_name: 'federate-victoria'
        scrape_interval: 60s

        honor_labels: true
        metrics_path: '/select/0/prometheus/federate'

        params:
          'match[]':
            - '{job="kubernetes-nodes",namespace={{ .Release.Namespace | quote }}}'
            {{- if ( eq ( index .Values "eric-pm-server" "rbac" "appMonitoring" "federation" "cadvisorJob") true) }}
            - '{job="kubernetes-nodes-cadvisor",namespace={{ .Release.Namespace | quote }}}'
            {{- end }}
        static_configs:
          - targets:
            - 'eric-victoria-metrics-cluster-vmselect.monitoring:8481'
{{- end }}
{{ if ( eq ( index .Values "eric-pm-server" "rbac" "appMonitoring" "federation" "jobOverride") true) }}
      {{ index .Values "eric-pm-server" "rbac" "appMonitoring" "federation" "jobConfiguration" | indent 6 | trim }}
{{- end }}
{{- end }}
{{ if ( eq ( index .Values "eric-pm-server" "rbac" "appMonitoring" "enabled" ) false) }}
      - job_name: 'kubernetes-nodes'

        # Default to scraping over https. If required, just disable this or change to
        # `http`.
        scheme: https

        # This TLS & bearer token file config is used to connect to the actual scrape
        # endpoints for cluster components. This is separate to discovery auth
        # configuration because discovery & scraping are two separate concerns in
        # Prometheus. The discovery auth config is automatic if Prometheus runs inside
        # the cluster. Otherwise, more config options have to be provided within the
        # <kubernetes_sd_config>.
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
          # If your node certificates are self-signed or use a different CA to the
          # master CA, then disable certificate verification below. Note that
          # certificate verification is an integral part of a secure infrastructure
          # so this should only be disabled in a controlled environment. You can
          # disable certificate verification by uncommenting the line below.
          #
          insecure_skip_verify: false
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token

        kubernetes_sd_configs:
          - role: node
            namespaces:
              names:
                - {{ .Release.Namespace }}

        relabel_configs:
          - action: labelmap
            regex: __meta_kubernetes_node_label_(.+)
          - target_label: __address__
            replacement: kubernetes.default.svc:443
          - source_labels: [__meta_kubernetes_node_name]
            regex: (.+)
            target_label: __metrics_path__
            replacement: /api/v1/nodes/${1}/proxy/metrics
        metric_relabel_configs:
          - source_labels: ['namespace']
            regex: '{{ .Release.Namespace }}'
            action: 'keep'

      {{ if ( eq ( index .Values "eric-pm-server" "rbac" "appMonitoring" "federation" "cadvisorJob") true) }}
      - job_name: 'kubernetes-nodes-cadvisor'

        # Default to scraping over https. If required, just disable this or change to
        # `http`.
        scheme: https

        # This TLS & bearer token file config is used to connect to the actual scrape
        # endpoints for cluster components. This is separate to discovery auth
        # configuration because discovery & scraping are two separate concerns in
        # Prometheus. The discovery auth config is automatic if Prometheus runs inside
        # the cluster. Otherwise, more config options have to be provided within the
        # <kubernetes_sd_config>.
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
          # If your node certificates are self-signed or use a different CA to the
          # master CA, then disable certificate verification below. Note that
          # certificate verification is an integral part of a secure infrastructure
          # so this should only be disabled in a controlled environment. You can
          # disable certificate verification by uncommenting the line below.
          #
          insecure_skip_verify: false
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token

        kubernetes_sd_configs:
          - role: node
            namespaces:
              names:
                - {{ .Release.Namespace }}

        # This configuration will work only on kubelet 1.7.3+
        # As the scrape endpoints for cAdvisor have changed
        # if you are using older version you need to change the replacement to
        # replacement: /api/v1/nodes/${1}:4194/proxy/metrics
        relabel_configs:
          - action: labelmap
            regex: __meta_kubernetes_node_label_(.+)
          - target_label: __address__
            replacement: kubernetes.default.svc:443
          - source_labels: [__meta_kubernetes_node_name]
            regex: (.+)
            target_label: __metrics_path__
            replacement: /api/v1/nodes/${1}/proxy/metrics/cadvisor
        metric_relabel_configs:
          - source_labels: ['namespace']
            regex: '{{ .Release.Namespace }}'
            action: 'keep'
       {{- end }}
{{- end }}
      # Scrape config for service endpoints.
      #
      # The relabeling allows the actual service scrape endpoint to be configured
      # via the following annotations:
      #
      # * `prometheus.io/scrape`: Only scrape services that have a value of `true`
      # * `prometheus.io/scheme`: If the metrics endpoint is secured then you will need
      # to set this to `https` & most likely set the `tls_config` of the scrape config.
      # * `prometheus.io/path`: If the metrics path is not `/metrics` override this.
      # * `prometheus.io/port`: If the metrics are exposed on a different port to the
      # service then set this appropriately.
      - job_name: 'kubernetes-service-endpoints'

        kubernetes_sd_configs:
          - role: endpoints
            namespaces:
              names:
                - {{ .Release.Namespace }}

        relabel_configs:
          - source_labels: [__meta_kubernetes_service_name]
            action: replace
            target_label: job
          - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]
            action: keep
            regex: true
          - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
            action: drop
            regex: (https?)
          - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
            action: replace
            target_label: __metrics_path__
            regex: (.+)
          - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
            action: replace
            target_label: __address__
            regex: ((?:\[.+\])|(?:.+))(?::\d+);(\d+)
            replacement: $1:$2
          - action: labelmap
            regex: __meta_kubernetes_service_label_(.+)
          - source_labels: [__meta_kubernetes_namespace]
            action: replace
            target_label: kubernetes_namespace
          - source_labels: [__meta_kubernetes_service_name]
            action: replace
            target_label: kubernetes_name

      # Example scrape config for probing services via the Blackbox Exporter.
      #
      # The relabeling allows the actual service scrape endpoint to be configured
      # via the following annotations:
      #
      # * `prometheus.io/probe`: Only probe services that have a value of `true`
      - job_name: 'kubernetes-services'

        metrics_path: /probe
        params:
          module: [http_2xx]

        kubernetes_sd_configs:
          - role: service
            namespaces:
              names:
                - {{ .Release.Namespace }}

        relabel_configs:
          - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_probe]
            action: keep
            regex: true
          - source_labels: [__address__]
            target_label: __param_target
          - target_label: __address__
            replacement: blackbox
          - source_labels: [__param_target]
            target_label: instance
          - action: labelmap
            regex: __meta_kubernetes_service_label_(.+)
          - source_labels: [__meta_kubernetes_namespace]
            target_label: kubernetes_namespace
          - source_labels: [__meta_kubernetes_service_name]
            target_label: kubernetes_name
          - source_labels: [__meta_kubernetes_service_port_name]
            action: keep
            regex: 'http-metrics.*'
          - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]
            action: keep
            regex: true
          - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
            action: replace
            target_label: __scheme__
            regex: (https?)
          - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
            action: replace
            target_label: __metrics_path__
            regex: (.+)

      # Example scrape config for pods
      #
      # The relabeling allows the actual pod scrape endpoint to be configured via the
      # following annotations:
      #
      # * `prometheus.io/scrape`: Only scrape pods that have a value of `true`
      # * `prometheus.io/path`: If the metrics path is not `/metrics` override this.
      # * `prometheus.io/port`: Scrape the pod on the indicated port instead of the default of `9102`.
      - job_name: 'kubernetes-pods'

        kubernetes_sd_configs:
          - role: pod
            namespaces:
              names:
                - {{ .Release.Namespace }}

        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
            action: keep
            regex: true
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
            action: replace
            target_label: __metrics_path__
            regex: (.+)
          - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
            action: replace
            regex: ((?:\[.+\])|(?:.+))(?::\d+);(\d+)
            replacement: $1:$2
            target_label: __address__
          - action: labelmap
            regex: __meta_kubernetes_pod_label_(.+)
          - source_labels: [__meta_kubernetes_namespace]
            action: replace
            target_label: kubernetes_namespace
          - source_labels: [__meta_kubernetes_pod_name]
            action: replace
            target_label: kubernetes_pod_name
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scheme]
            action: drop
            regex: https
          - source_labels: [__meta_kubernetes_pod_name]
            action: drop
            regex: eric-data-distributed-coordinator-ed.*

      - job_name: 'kubernetes-https-pods'
        scheme: https
        tls_config:
          ca_file: /run/secrets/cacert/cacertbundle.pem
          cert_file: /run/secrets/clicert/clicert.pem
          key_file: /run/secrets/clicert/cliprivkey.pem
          server_name: certified-scrape-target
          insecure_skip_verify: false

        kubernetes_sd_configs:
          - role: pod
            namespaces:
              names:
                - {{ .Release.Namespace }}
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
            action: keep
            regex: true
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
            action: replace
            target_label: __metrics_path__
            regex: (.+)
          - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
            action: replace
            regex: (([^:]+)|(\[(?:[a-zA-Z0-9]{0,4}:?){1,8}\]|\[(?:[a-zA-Z0-9]{0,4}:?){1,4}(?:[0-9]{1,3}\.){3}[0-9]{1,3}\]))(?::\d+)?;(\d+)
            replacement: ${1}:${4}
            target_label: __address__
          - action: labelmap
            regex: _meta_kubernetes_pod_label(.+)
          - source_labels: [__meta_kubernetes_namespace]
            action: replace
            target_label: kubernetes_namespace
          - source_labels: [__meta_kubernetes_pod_name]
            action: replace
            target_label: kubernetes_pod_name
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scheme]
            action: keep
            regex: https

      # Scrape config for sm
      - job_name: 'sm-controller'
        kubernetes_sd_configs:
        - role: endpoints
          namespaces:
            names:
              - {{ .Release.Namespace }}

        relabel_configs:
        - source_labels: [__meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
          action: keep
          regex: istio-pilot;http-monitoring

      - job_name: 'sm-certmgr'
        kubernetes_sd_configs:
        - role: endpoints
          namespaces:
            names:
              - {{ .Release.Namespace }}

        relabel_configs:
        - source_labels: [__meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
          action: keep
          regex: istio-citadel;http-monitoring

      - job_name: 'sm-sidecar-injector'
        kubernetes_sd_configs:
        - role: endpoints
          namespaces:
            names:
              - {{ .Release.Namespace }}

        relabel_configs:
        - source_labels: [__meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
          action: keep
          regex: istio-sidecar-injector;http-monitoring

      - job_name: k8s-pod-15s-https
        scrape_interval: 15s
        scrape_timeout: 10s
        scheme: https
        tls_config:
          ca_file: /run/secrets/eric-sec-sip-tls-trusted-root-cert/ca.crt
          cert_file: /run/secrets/eric-pm-server-client-cert/tls.crt
          key_file: /run/secrets/eric-pm-server-client-cert/tls.key
          server_name: certified-scrape-target
          insecure_skip_verify: false
        kubernetes_sd_configs:
          - role: pod
            namespaces:
              names:
                - {{ .Release.Namespace }}
        relabel_configs:
          - source_labels:
              - __meta_kubernetes_pod_annotation_prometheus_io_scrape_interval
            action: keep
            regex: '^15s$'
          - source_labels:
              - __meta_kubernetes_pod_annotation_prometheus_io_scrape_role
            action: keep
            regex: '^pod$'
          - source_labels:
              - __address__
            regex: .*:\d+
            action: keep
          - source_labels:
              - __meta_kubernetes_pod_annotation_prometheus_io_path
            action: replace
            regex: (.+)
            target_label: __metrics_path__
          - source_labels: [ __address__  ]
            regex: .*:(\d+)
            target_label: __tmp_container_target_port
          - source_labels: [ __meta_kubernetes_pod_annotation_prometheus_io_port ]
            action: keepequal
            target_label: __tmp_container_target_port
          - source_labels:
              - __meta_kubernetes_pod_container_port_name
              - __meta_kubernetes_pod_annotation_prometheus_io_scheme
            action: keep
            regex: ^((https-.*metrics.*;https)|(https-.*metrics.*;)|(.*;https))$
          - source_labels:
              - __address__
              - __meta_kubernetes_pod_annotation_prometheus_io_port
            action: replace
            regex: ((?:\[.+\])|(?:.+))(?::\d+);(\d+)
            replacement: $1:$2
            target_label: __address__
          - source_labels:
              - __meta_kubernetes_namespace
            action: replace
            target_label: namespace
          - source_labels:
              - __meta_kubernetes_pod_label_app_kubernetes_io_name
            action: replace
            target_label: service_name
          - source_labels:
              - __meta_kubernetes_pod_name
            action: replace
            target_label: pod_name
          - source_labels:
              - __meta_kubernetes_pod_phase
            regex: Pending|Succeeded|Failed|Completed
            action: drop
          - source_labels:
              - __meta_kubernetes_pod_annotation_prometheus_io_node_label
              - __meta_kubernetes_pod_node_name
            regex: "true;(.*)"
            replacement: $1
            target_label: node_name
          - source_labels:
              - __meta_kubernetes_namespace
            action: replace
            target_label: kubernetes_namespace
          - source_labels:
              - __meta_kubernetes_pod_name
            action: replace
            target_label: kubernetes_pod_name
      - job_name: k8s-pod-15s-https-2
        scrape_interval: 15s
        scrape_timeout: 10s
        scheme: https
        tls_config:
          ca_file: /run/secrets/eric-sec-sip-tls-trusted-root-cert/ca.crt
          cert_file: /run/secrets/eric-pm-server-client-cert/tls.crt
          key_file: /run/secrets/eric-pm-server-client-cert/tls.key
          server_name: certified-scrape-target
          insecure_skip_verify: false
        kubernetes_sd_configs:
          - role: pod
            namespaces:
              names:
                - {{ .Release.Namespace }}
        relabel_configs:
          - source_labels:
              - __meta_kubernetes_pod_annotation_prometheus_io_scrape_interval2
            action: keep
            regex: '^15s$'
          - source_labels:
              - __meta_kubernetes_pod_annotation_prometheus_io_scrape_role2
            action: keep
            regex: '^pod$'
          - source_labels:
              - __address__
            regex: .*:\d+
            action: keep
          - source_labels:
              - __meta_kubernetes_pod_annotation_prometheus_io_path2
            action: replace
            regex: (.+)
            target_label: __metrics_path__
          - source_labels: [ __address__  ]
            regex: .*:(\d+)
            target_label: __tmp_container_target_port
          - source_labels: [ __meta_kubernetes_pod_annotation_prometheus_io_port2 ]
            action: keepequal
            target_label: __tmp_container_target_port
          - source_labels:
              - __meta_kubernetes_pod_container_port_name
              - __meta_kubernetes_pod_annotation_prometheus_io_scheme2
            action: keep
            regex: ^((https-.*metrics.*;https)|(https-.*metrics.*;)|(.*;https))$
          - source_labels:
              - __address__
              - __meta_kubernetes_pod_annotation_prometheus_io_port2
            action: replace
            regex: ((?:\[.+\])|(?:.+))(?::\d+);(\d+)
            replacement: $1:$2
            target_label: __address__
          - source_labels:
              - __meta_kubernetes_namespace
            action: replace
            target_label: namespace
          - source_labels:
              - __meta_kubernetes_pod_label_app_kubernetes_io_name
            action: replace
            target_label: service_name
          - source_labels:
              - __meta_kubernetes_pod_name
            action: replace
            target_label: pod_name
          - source_labels:
              - __meta_kubernetes_pod_phase
            regex: Pending|Succeeded|Failed|Completed
            action: drop
          - source_labels:
              - __meta_kubernetes_pod_annotation_prometheus_io_node_label
              - __meta_kubernetes_pod_node_name
            regex: "true;(.*)"
            replacement: $1
            target_label: node_name
          - source_labels:
              - __meta_kubernetes_namespace
            action: replace
            target_label: kubernetes_namespace
          - source_labels:
              - __meta_kubernetes_pod_name
            action: replace
            target_label: kubernetes_pod_name
      - job_name: k8s-pod-15s-https-3
        scrape_interval: 15s
        scrape_timeout: 10s
        scheme: https
        tls_config:
          ca_file: /run/secrets/eric-sec-sip-tls-trusted-root-cert/ca.crt
          cert_file: /run/secrets/eric-pm-server-client-cert/tls.crt
          key_file: /run/secrets/eric-pm-server-client-cert/tls.key
          server_name: certified-scrape-target
          insecure_skip_verify: false
        kubernetes_sd_configs:
          - role: pod
            namespaces:
              names:
                - {{ .Release.Namespace }}
        relabel_configs:
          - source_labels:
              - __meta_kubernetes_pod_annotation_prometheus_io_scrape_interval3
            action: keep
            regex: '^15s$'
          - source_labels:
              - __meta_kubernetes_pod_annotation_prometheus_io_scrape_role3
            action: keep
            regex: '^pod$'
          - source_labels:
              - __address__
            regex: .*:\d+
            action: keep
          - source_labels:
              - __meta_kubernetes_pod_annotation_prometheus_io_path3
            action: replace
            regex: (.+)
            target_label: __metrics_path__
          - source_labels: [ __address__  ]
            regex: .*:(\d+)
            target_label: __tmp_container_target_port
          - source_labels: [ __meta_kubernetes_pod_annotation_prometheus_io_port3 ]
            action: keepequal
            target_label: __tmp_container_target_port
          - source_labels:
              - __meta_kubernetes_pod_container_port_name
              - __meta_kubernetes_pod_annotation_prometheus_io_scheme3
            action: keep
            regex: ^((https-.*metrics.*;https)|(https-.*metrics.*;)|(.*;https))$
          - source_labels:
              - __address__
              - __meta_kubernetes_pod_annotation_prometheus_io_port3
            action: replace
            regex: ((?:\[.+\])|(?:.+))(?::\d+);(\d+)
            replacement: $1:$2
            target_label: __address__
          - source_labels:
              - __meta_kubernetes_namespace
            action: replace
            target_label: namespace
          - source_labels:
              - __meta_kubernetes_pod_label_app_kubernetes_io_name
            action: replace
            target_label: service_name
          - source_labels:
              - __meta_kubernetes_pod_name
            action: replace
            target_label: pod_name
          - source_labels:
              - __meta_kubernetes_pod_phase
            regex: Pending|Succeeded|Failed|Completed
            action: drop
          - source_labels:
              - __meta_kubernetes_pod_annotation_prometheus_io_node_label
              - __meta_kubernetes_pod_node_name
            regex: "true;(.*)"
            replacement: $1
            target_label: node_name
          - source_labels:
              - __meta_kubernetes_namespace
            action: replace
            target_label: kubernetes_namespace
          - source_labels:
              - __meta_kubernetes_pod_name
            action: replace
            target_label: kubernetes_pod_name
      - job_name: k8s-pod-15s-https-4
        scrape_interval: 15s
        scrape_timeout: 10s
        scheme: https
        tls_config:
          ca_file: /run/secrets/eric-sec-sip-tls-trusted-root-cert/ca.crt
          cert_file: /run/secrets/eric-pm-server-client-cert/tls.crt
          key_file: /run/secrets/eric-pm-server-client-cert/tls.key
          server_name: certified-scrape-target
          insecure_skip_verify: false
        kubernetes_sd_configs:
          - role: pod
            namespaces:
              names:
                - {{ .Release.Namespace }}
        relabel_configs:
          - source_labels:
              - __meta_kubernetes_pod_annotation_prometheus_io_scrape_interval4
            action: keep
            regex: '^15s$'
          - source_labels:
              - __meta_kubernetes_pod_annotation_prometheus_io_scrape_role4
            action: keep
            regex: '^pod$'
          - source_labels:
              - __address__
            regex: .*:\d+
            action: keep
          - source_labels:
              - __meta_kubernetes_pod_annotation_prometheus_io_path4
            action: replace
            regex: (.+)
            target_label: __metrics_path__
          - source_labels: [ __address__  ]
            regex: .*:(\d+)
            target_label: __tmp_container_target_port
          - source_labels: [ __meta_kubernetes_pod_annotation_prometheus_io_port4 ]
            action: keepequal
            target_label: __tmp_container_target_port
          - source_labels:
              - __meta_kubernetes_pod_container_port_name
              - __meta_kubernetes_pod_annotation_prometheus_io_scheme4
            action: keep
            regex: ^((https-.*metrics.*;https)|(https-.*metrics.*;)|(.*;https))$
          - source_labels:
              - __address__
              - __meta_kubernetes_pod_annotation_prometheus_io_port4
            action: replace
            regex: ((?:\[.+\])|(?:.+))(?::\d+);(\d+)
            replacement: $1:$2
            target_label: __address__
          - source_labels:
              - __meta_kubernetes_namespace
            action: replace
            target_label: namespace
          - source_labels:
              - __meta_kubernetes_pod_label_app_kubernetes_io_name
            action: replace
            target_label: service_name
          - source_labels:
              - __meta_kubernetes_pod_name
            action: replace
            target_label: pod_name
          - source_labels:
              - __meta_kubernetes_pod_phase
            regex: Pending|Succeeded|Failed|Completed
            action: drop
          - source_labels:
              - __meta_kubernetes_pod_annotation_prometheus_io_node_label
              - __meta_kubernetes_pod_node_name
            regex: "true;(.*)"
            replacement: $1
            target_label: node_name
          - source_labels:
              - __meta_kubernetes_namespace
            action: replace
            target_label: kubernetes_namespace
          - source_labels:
              - __meta_kubernetes_pod_name
            action: replace
            target_label: kubernetes_pod_name
      
      - job_name: k8s-service-15s-https
        scrape_interval: 15s
        scrape_timeout: 10s
        scheme: https
        tls_config:
          ca_file: /run/secrets/eric-sec-sip-tls-trusted-root-cert/ca.crt
          cert_file: /run/secrets/eric-pm-server-client-cert/tls.crt
          key_file: /run/secrets/eric-pm-server-client-cert/tls.key
          server_name: certified-scrape-target
          insecure_skip_verify: false
        kubernetes_sd_configs:
          - role: service
            namespaces:
              names:
                - {{ .Release.Namespace }}
        relabel_configs:
          - source_labels:
              - __meta_kubernetes_service_annotation_prometheus_io_scrape_interval
            action: keep
            regex: '^15s$'
          - source_labels:
              - __meta_kubernetes_service_annotation_prometheus_io_scrape_role
            action: keep
            regex: '^service$'
          - source_labels:
              - __address__
            regex: .*:\d+
            action: keep
          - source_labels:
              - __meta_kubernetes_service_annotation_prometheus_io_path
            action: replace
            regex: (.+)
            target_label: __metrics_path__
          - source_labels: [ __address__  ]
            regex: .*:(\d+)
            target_label: __tmp_container_target_port
          - source_labels: [ __meta_kubernetes_service_annotation_prometheus_io_port ]
            action: keepequal
            target_label: __tmp_container_target_port
          - source_labels:
              - __meta_kubernetes_service_port_name
              - __meta_kubernetes_service_annotation_prometheus_io_scheme
            action: keep
            regex: ^((https-.*metrics.*;https)|(https-.*metrics.*;)|(.*;https))$
          - source_labels:
              - __address__
              - __meta_kubernetes_service_annotation_prometheus_io_port
            action: replace
            regex: ((?:\[.+\])|(?:.+))(?::\d+);(\d+)
            replacement: $1:$2
            target_label: __address__
          - source_labels:
              - __meta_kubernetes_namespace
            action: replace
            target_label: namespace
          - source_labels:
              - __meta_kubernetes_service_name
            action: replace
            target_label: service_name
          - source_labels:
              - __meta_kubernetes_namespace
            action: replace
            target_label: kubernetes_namespace
          - source_labels:
              - __meta_kubernetes_service_name
            action: replace
            target_label: kubernetes_name
      - job_name: k8s-service-15s-https-2
        scrape_interval: 15s
        scrape_timeout: 10s
        scheme: https
        tls_config:
          ca_file: /run/secrets/eric-sec-sip-tls-trusted-root-cert/ca.crt
          cert_file: /run/secrets/eric-pm-server-client-cert/tls.crt
          key_file: /run/secrets/eric-pm-server-client-cert/tls.key
          server_name: certified-scrape-target
          insecure_skip_verify: false
        kubernetes_sd_configs:
          - role: service
            namespaces:
              names:
                - {{ .Release.Namespace }}
        relabel_configs:
          - source_labels:
              - __meta_kubernetes_service_annotation_prometheus_io_scrape_interval2
            action: keep
            regex: '^15s$'
          - source_labels:
              - __meta_kubernetes_service_annotation_prometheus_io_scrape_role2
            action: keep
            regex: '^service$'
          - source_labels:
              - __address__
            regex: .*:\d+
            action: keep
          - source_labels:
              - __meta_kubernetes_service_annotation_prometheus_io_path2
            action: replace
            regex: (.+)
            target_label: __metrics_path__
          - source_labels: [ __address__  ]
            regex: .*:(\d+)
            target_label: __tmp_container_target_port
          - source_labels: [ __meta_kubernetes_service_annotation_prometheus_io_port2 ]
            action: keepequal
            target_label: __tmp_container_target_port
          - source_labels:
              - __meta_kubernetes_service_port_name
              - __meta_kubernetes_service_annotation_prometheus_io_scheme2
            action: keep
            regex: ^((https-.*metrics.*;https)|(https-.*metrics.*;)|(.*;https))$
          - source_labels:
              - __address__
              - __meta_kubernetes_service_annotation_prometheus_io_port2
            action: replace
            regex: ((?:\[.+\])|(?:.+))(?::\d+);(\d+)
            replacement: $1:$2
            target_label: __address__
          - source_labels:
              - __meta_kubernetes_namespace
            action: replace
            target_label: namespace
          - source_labels:
              - __meta_kubernetes_service_name
            action: replace
            target_label: service_name
          - source_labels:
              - __meta_kubernetes_namespace
            action: replace
            target_label: kubernetes_namespace
          - source_labels:
              - __meta_kubernetes_service_name
            action: replace
            target_label: kubernetes_name
      - job_name: k8s-service-15s-https-3
        scrape_interval: 15s
        scrape_timeout: 10s
        scheme: https
        tls_config:
          ca_file: /run/secrets/eric-sec-sip-tls-trusted-root-cert/ca.crt
          cert_file: /run/secrets/eric-pm-server-client-cert/tls.crt
          key_file: /run/secrets/eric-pm-server-client-cert/tls.key
          server_name: certified-scrape-target
          insecure_skip_verify: false
        kubernetes_sd_configs:
          - role: service
            namespaces:
              names:
                - {{ .Release.Namespace }}
        relabel_configs:
          - source_labels:
              - __meta_kubernetes_service_annotation_prometheus_io_scrape_interval3
            action: keep
            regex: '^15s$'
          - source_labels:
              - __meta_kubernetes_service_annotation_prometheus_io_scrape_role3
            action: keep
            regex: '^service$'
          - source_labels:
              - __address__
            regex: .*:\d+
            action: keep
          - source_labels:
              - __meta_kubernetes_service_annotation_prometheus_io_path3
            action: replace
            regex: (.+)
            target_label: __metrics_path__
          - source_labels: [ __address__  ]
            regex: .*:(\d+)
            target_label: __tmp_container_target_port
          - source_labels: [ __meta_kubernetes_service_annotation_prometheus_io_port3 ]
            action: keepequal
            target_label: __tmp_container_target_port
          - source_labels:
              - __meta_kubernetes_service_port_name
              - __meta_kubernetes_service_annotation_prometheus_io_scheme3
            action: keep
            regex: ^((https-.*metrics.*;https)|(https-.*metrics.*;)|(.*;https))$
          - source_labels:
              - __address__
              - __meta_kubernetes_service_annotation_prometheus_io_port3
            action: replace
            regex: ((?:\[.+\])|(?:.+))(?::\d+);(\d+)
            replacement: $1:$2
            target_label: __address__
          - source_labels:
              - __meta_kubernetes_namespace
            action: replace
            target_label: namespace
          - source_labels:
              - __meta_kubernetes_service_name
            action: replace
            target_label: service_name
          - source_labels:
              - __meta_kubernetes_namespace
            action: replace
            target_label: kubernetes_namespace
          - source_labels:
              - __meta_kubernetes_service_name
            action: replace
            target_label: kubernetes_name
      - job_name: k8s-service-15s-https-4
        scrape_interval: 15s
        scrape_timeout: 10s
        scheme: https
        tls_config:
          ca_file: /run/secrets/eric-sec-sip-tls-trusted-root-cert/ca.crt
          cert_file: /run/secrets/eric-pm-server-client-cert/tls.crt
          key_file: /run/secrets/eric-pm-server-client-cert/tls.key
          server_name: certified-scrape-target
          insecure_skip_verify: false
        kubernetes_sd_configs:
          - role: service
            namespaces:
              names:
                - {{ .Release.Namespace }}
        relabel_configs:
          - source_labels:
              - __meta_kubernetes_service_annotation_prometheus_io_scrape_interval4
            action: keep
            regex: '^15s$'
          - source_labels:
              - __meta_kubernetes_service_annotation_prometheus_io_scrape_role4
            action: keep
            regex: '^service$'
          - source_labels:
              - __address__
            regex: .*:\d+
            action: keep
          - source_labels:
              - __meta_kubernetes_service_annotation_prometheus_io_path4
            action: replace
            regex: (.+)
            target_label: __metrics_path__
          - source_labels: [ __address__  ]
            regex: .*:(\d+)
            target_label: __tmp_container_target_port
          - source_labels: [ __meta_kubernetes_service_annotation_prometheus_io_port4 ]
            action: keepequal
            target_label: __tmp_container_target_port
          - source_labels:
              - __meta_kubernetes_service_port_name
              - __meta_kubernetes_service_annotation_prometheus_io_scheme4
            action: keep
            regex: ^((https-.*metrics.*;https)|(https-.*metrics.*;)|(.*;https))$
          - source_labels:
              - __address__
              - __meta_kubernetes_service_annotation_prometheus_io_port4
            action: replace
            regex: ((?:\[.+\])|(?:.+))(?::\d+);(\d+)
            replacement: $1:$2
            target_label: __address__
          - source_labels:
              - __meta_kubernetes_namespace
            action: replace
            target_label: namespace
          - source_labels:
              - __meta_kubernetes_service_name
            action: replace
            target_label: service_name
          - source_labels:
              - __meta_kubernetes_namespace
            action: replace
            target_label: kubernetes_namespace
          - source_labels:
              - __meta_kubernetes_service_name
            action: replace
            target_label: kubernetes_name
      
      - job_name: k8s-endpoints-15s-https
        scrape_interval: 15s
        scrape_timeout: 10s
        scheme: https
        tls_config:
          ca_file: /run/secrets/eric-sec-sip-tls-trusted-root-cert/ca.crt
          cert_file: /run/secrets/eric-pm-server-client-cert/tls.crt
          key_file: /run/secrets/eric-pm-server-client-cert/tls.key
          server_name: certified-scrape-target
          insecure_skip_verify: false
        kubernetes_sd_configs:
          - role: endpoints
            namespaces:
              names:
                - {{ .Release.Namespace }}
        relabel_configs:
          - source_labels:
              - __meta_kubernetes_service_annotation_prometheus_io_scrape_interval
            action: keep
            regex: '^15s$'
          - source_labels:
              - __meta_kubernetes_service_annotation_prometheus_io_scrape_role
            action: keep
            regex: '^endpoints$'
          - source_labels:
              - __address__
            regex: .*:\d+
            action: keep
          - source_labels:
              - __meta_kubernetes_service_annotation_prometheus_io_path
            action: replace
            regex: (.+)
            target_label: __metrics_path__
          - source_labels: [ __address__  ]
            regex: .*:(\d+)
            target_label: __tmp_container_target_port
          - source_labels: [ __meta_kubernetes_service_annotation_prometheus_io_port ]
            action: keepequal
            target_label: __tmp_container_target_port
          - source_labels:
              - __meta_kubernetes_pod_container_port_name
              - __meta_kubernetes_service_annotation_prometheus_io_scheme
            action: keep
            regex: ^((https-.*metrics.*;https)|(https-.*metrics.*;)|(.*;https))$
          - source_labels:
              - __address__
              - __meta_kubernetes_service_annotation_prometheus_io_port
            action: replace
            regex: ((?:\[.+\])|(?:.+))(?::\d+);(\d+)
            replacement: $1:$2
            target_label: __address__
          - source_labels:
              - __meta_kubernetes_namespace
            action: replace
            target_label: namespace
          - source_labels:
              - __meta_kubernetes_service_name
            action: replace
            target_label: service_name
          - source_labels:
              - __meta_kubernetes_pod_name
            action: replace
            target_label: pod_name
          - source_labels:
              - __meta_kubernetes_pod_phase
            regex: Pending|Succeeded|Failed|Completed
            action: drop
          - source_labels:
              - __meta_kubernetes_service_annotation_prometheus_io_node_label
              - __meta_kubernetes_pod_node_name
            regex: "true;(.*)"
            replacement: $1
            target_label: node_name
          - source_labels:
              - __meta_kubernetes_namespace
            action: replace
            target_label: kubernetes_namespace
          - source_labels:
              - __meta_kubernetes_service_name
            action: replace
            target_label: kubernetes_name
      - job_name: k8s-endpoints-15s-https-2
        scrape_interval: 15s
        scrape_timeout: 10s
        scheme: https
        tls_config:
          ca_file: /run/secrets/eric-sec-sip-tls-trusted-root-cert/ca.crt
          cert_file: /run/secrets/eric-pm-server-client-cert/tls.crt
          key_file: /run/secrets/eric-pm-server-client-cert/tls.key
          server_name: certified-scrape-target
          insecure_skip_verify: false
        kubernetes_sd_configs:
          - role: endpoints
            namespaces:
              names:
                - {{ .Release.Namespace }}
        relabel_configs:
          - source_labels:
              - __meta_kubernetes_service_annotation_prometheus_io_scrape_interval2
            action: keep
            regex: '^15s$'
          - source_labels:
              - __meta_kubernetes_service_annotation_prometheus_io_scrape_role2
            action: keep
            regex: '^endpoints$'
          - source_labels:
              - __address__
            regex: .*:\d+
            action: keep
          - source_labels:
              - __meta_kubernetes_service_annotation_prometheus_io_path2
            action: replace
            regex: (.+)
            target_label: __metrics_path__
          - source_labels: [ __address__  ]
            regex: .*:(\d+)
            target_label: __tmp_container_target_port
          - source_labels: [ __meta_kubernetes_service_annotation_prometheus_io_port2 ]
            action: keepequal
            target_label: __tmp_container_target_port
          - source_labels:
              - __meta_kubernetes_pod_container_port_name
              - __meta_kubernetes_service_annotation_prometheus_io_scheme2
            action: keep
            regex: ^((https-.*metrics.*;https)|(https-.*metrics.*;)|(.*;https))$
          - source_labels:
              - __address__
              - __meta_kubernetes_service_annotation_prometheus_io_port2
            action: replace
            regex: ((?:\[.+\])|(?:.+))(?::\d+);(\d+)
            replacement: $1:$2
            target_label: __address__
          - source_labels:
              - __meta_kubernetes_namespace
            action: replace
            target_label: namespace
          - source_labels:
              - __meta_kubernetes_service_name
            action: replace
            target_label: service_name
          - source_labels:
              - __meta_kubernetes_pod_name
            action: replace
            target_label: pod_name
          - source_labels:
              - __meta_kubernetes_pod_phase
            regex: Pending|Succeeded|Failed|Completed
            action: drop
          - source_labels:
              - __meta_kubernetes_service_annotation_prometheus_io_node_label
              - __meta_kubernetes_pod_node_name
            regex: "true;(.*)"
            replacement: $1
            target_label: node_name
          - source_labels:
              - __meta_kubernetes_namespace
            action: replace
            target_label: kubernetes_namespace
          - source_labels:
              - __meta_kubernetes_service_name
            action: replace
            target_label: kubernetes_name
      - job_name: k8s-endpoints-15s-https-3
        scrape_interval: 15s
        scrape_timeout: 10s
        scheme: https
        tls_config:
          ca_file: /run/secrets/eric-sec-sip-tls-trusted-root-cert/ca.crt
          cert_file: /run/secrets/eric-pm-server-client-cert/tls.crt
          key_file: /run/secrets/eric-pm-server-client-cert/tls.key
          server_name: certified-scrape-target
          insecure_skip_verify: false
        kubernetes_sd_configs:
          - role: endpoints
            namespaces:
              names:
                - {{ .Release.Namespace }}
        relabel_configs:
          - source_labels:
              - __meta_kubernetes_service_annotation_prometheus_io_scrape_interval3
            action: keep
            regex: '^15s$'
          - source_labels:
              - __meta_kubernetes_service_annotation_prometheus_io_scrape_role3
            action: keep
            regex: '^endpoints$'
          - source_labels:
              - __address__
            regex: .*:\d+
            action: keep
          - source_labels:
              - __meta_kubernetes_service_annotation_prometheus_io_path3
            action: replace
            regex: (.+)
            target_label: __metrics_path__
          - source_labels: [ __address__  ]
            regex: .*:(\d+)
            target_label: __tmp_container_target_port
          - source_labels: [ __meta_kubernetes_service_annotation_prometheus_io_port3 ]
            action: keepequal
            target_label: __tmp_container_target_port
          - source_labels:
              - __meta_kubernetes_pod_container_port_name
              - __meta_kubernetes_service_annotation_prometheus_io_scheme3
            action: keep
            regex: ^((https-.*metrics.*;https)|(https-.*metrics.*;)|(.*;https))$
          - source_labels:
              - __address__
              - __meta_kubernetes_service_annotation_prometheus_io_port3
            action: replace
            regex: ((?:\[.+\])|(?:.+))(?::\d+);(\d+)
            replacement: $1:$2
            target_label: __address__
          - source_labels:
              - __meta_kubernetes_namespace
            action: replace
            target_label: namespace
          - source_labels:
              - __meta_kubernetes_service_name
            action: replace
            target_label: service_name
          - source_labels:
              - __meta_kubernetes_pod_name
            action: replace
            target_label: pod_name
          - source_labels:
              - __meta_kubernetes_pod_phase
            regex: Pending|Succeeded|Failed|Completed
            action: drop
          - source_labels:
              - __meta_kubernetes_service_annotation_prometheus_io_node_label
              - __meta_kubernetes_pod_node_name
            regex: "true;(.*)"
            replacement: $1
            target_label: node_name
          - source_labels:
              - __meta_kubernetes_namespace
            action: replace
            target_label: kubernetes_namespace
          - source_labels:
              - __meta_kubernetes_service_name
            action: replace
            target_label: kubernetes_name
      - job_name: k8s-endpoints-15s-https-4
        scrape_interval: 15s
        scrape_timeout: 10s
        scheme: https
        tls_config:
          ca_file: /run/secrets/eric-sec-sip-tls-trusted-root-cert/ca.crt
          cert_file: /run/secrets/eric-pm-server-client-cert/tls.crt
          key_file: /run/secrets/eric-pm-server-client-cert/tls.key
          server_name: certified-scrape-target
          insecure_skip_verify: false
        kubernetes_sd_configs:
          - role: endpoints
            namespaces:
              names:
                - {{ .Release.Namespace }}
        relabel_configs:
          - source_labels:
              - __meta_kubernetes_service_annotation_prometheus_io_scrape_interval4
            action: keep
            regex: '^15s$'
          - source_labels:
              - __meta_kubernetes_service_annotation_prometheus_io_scrape_role4
            action: keep
            regex: '^endpoints$'
          - source_labels:
              - __address__
            regex: .*:\d+
            action: keep
          - source_labels:
              - __meta_kubernetes_service_annotation_prometheus_io_path4
            action: replace
            regex: (.+)
            target_label: __metrics_path__
          - source_labels: [ __address__  ]
            regex: .*:(\d+)
            target_label: __tmp_container_target_port
          - source_labels: [ __meta_kubernetes_service_annotation_prometheus_io_port4 ]
            action: keepequal
            target_label: __tmp_container_target_port
          - source_labels:
              - __meta_kubernetes_pod_container_port_name
              - __meta_kubernetes_service_annotation_prometheus_io_scheme4
            action: keep
            regex: ^((https-.*metrics.*;https)|(https-.*metrics.*;)|(.*;https))$
          - source_labels:
              - __address__
              - __meta_kubernetes_service_annotation_prometheus_io_port4
            action: replace
            regex: ((?:\[.+\])|(?:.+))(?::\d+);(\d+)
            replacement: $1:$2
            target_label: __address__
          - source_labels:
              - __meta_kubernetes_namespace
            action: replace
            target_label: namespace
          - source_labels:
              - __meta_kubernetes_service_name
            action: replace
            target_label: service_name
          - source_labels:
              - __meta_kubernetes_pod_name
            action: replace
            target_label: pod_name
          - source_labels:
              - __meta_kubernetes_pod_phase
            regex: Pending|Succeeded|Failed|Completed
            action: drop
          - source_labels:
              - __meta_kubernetes_service_annotation_prometheus_io_node_label
              - __meta_kubernetes_pod_node_name
            regex: "true;(.*)"
            replacement: $1
            target_label: node_name
          - source_labels:
              - __meta_kubernetes_namespace
            action: replace
            target_label: kubernetes_namespace
          - source_labels:
              - __meta_kubernetes_service_name
            action: replace
            target_label: kubernetes_name
      - job_name: k8s-pod-15s-http
        scrape_interval: 15s
        scrape_timeout: 10s
        scheme: http
        kubernetes_sd_configs:
          - role: pod
            namespaces:
              names:
                - {{ .Release.Namespace }}
        relabel_configs:
          - source_labels:
              - __meta_kubernetes_pod_annotation_prometheus_io_scrape_interval
            action: keep
            regex: '^15s$'
          - source_labels:
              - __meta_kubernetes_pod_annotation_prometheus_io_scrape_role
            action: keep
            regex: '^pod$'
          - source_labels:
              - __address__
            regex: .*:\d+
            action: keep
          - source_labels:
              - __meta_kubernetes_pod_annotation_prometheus_io_path
            action: replace
            regex: (.+)
            target_label: __metrics_path__
          - source_labels: [ __address__  ]
            regex: .*:(\d+)
            target_label: __tmp_container_target_port
          - source_labels: [ __meta_kubernetes_pod_annotation_prometheus_io_port ]
            action: keepequal
            target_label: __tmp_container_target_port
          - source_labels:
              - __meta_kubernetes_pod_container_port_name
              - __meta_kubernetes_pod_annotation_prometheus_io_scheme
            action: keep
            regex: ^((http-.*metrics.*;http)|(http-.*metrics.*;)|(.*;http))$
          - source_labels:
              - __address__
              - __meta_kubernetes_pod_annotation_prometheus_io_port
            action: replace
            regex: ((?:\[.+\])|(?:.+))(?::\d+);(\d+)
            replacement: $1:$2
            target_label: __address__
          - source_labels:
              - __meta_kubernetes_namespace
            action: replace
            target_label: namespace
          - source_labels:
              - __meta_kubernetes_pod_label_app_kubernetes_io_name
            action: replace
            target_label: service_name
          - source_labels:
              - __meta_kubernetes_pod_name
            action: replace
            target_label: pod_name
          - source_labels:
              - __meta_kubernetes_pod_phase
            regex: Pending|Succeeded|Failed|Completed
            action: drop
          - source_labels:
              - __meta_kubernetes_pod_annotation_prometheus_io_node_label
              - __meta_kubernetes_pod_node_name
            regex: "true;(.*)"
            replacement: $1
            target_label: node_name
          - source_labels:
              - __meta_kubernetes_namespace
            action: replace
            target_label: kubernetes_namespace
          - source_labels:
              - __meta_kubernetes_pod_name
            action: replace
            target_label: kubernetes_pod_name
  
      - job_name: k8s-pod-15s-http-2
        scrape_interval: 15s
        scrape_timeout: 10s
        scheme: http
        kubernetes_sd_configs:
          - role: pod
            namespaces:
              names:
                - {{ .Release.Namespace }}
        relabel_configs:
          - source_labels:
              - __meta_kubernetes_pod_annotation_prometheus_io_scrape_interval2
            action: keep
            regex: '^15s$'
          - source_labels:
              - __meta_kubernetes_pod_annotation_prometheus_io_scrape_role2
            action: keep
            regex: '^pod$'
          - source_labels:
              - __address__
            regex: .*:\d+
            action: keep
          - source_labels:
              - __meta_kubernetes_pod_annotation_prometheus_io_path2
            action: replace
            regex: (.+)
            target_label: __metrics_path__
          - source_labels: [ __address__  ]
            regex: .*:(\d+)
            target_label: __tmp_container_target_port
          - source_labels: [ __meta_kubernetes_pod_annotation_prometheus_io_port2 ]
            action: keepequal
            target_label: __tmp_container_target_port
          - source_labels:
              - __meta_kubernetes_pod_container_port_name
              - __meta_kubernetes_pod_annotation_prometheus_io_scheme2
            action: keep
            regex: ^((http-.*metrics.*;http)|(http-.*metrics.*;)|(.*;http))$
          - source_labels:
              - __address__
              - __meta_kubernetes_pod_annotation_prometheus_io_port2
            action: replace
            regex: ((?:\[.+\])|(?:.+))(?::\d+);(\d+)
            replacement: $1:$2
            target_label: __address__
          - source_labels:
              - __meta_kubernetes_namespace
            action: replace
            target_label: namespace
          - source_labels:
              - __meta_kubernetes_pod_label_app_kubernetes_io_name
            action: replace
            target_label: service_name
          - source_labels:
              - __meta_kubernetes_pod_name
            action: replace
            target_label: pod_name
          - source_labels:
              - __meta_kubernetes_pod_phase
            regex: Pending|Succeeded|Failed|Completed
            action: drop
          - source_labels:
              - __meta_kubernetes_pod_annotation_prometheus_io_node_label
              - __meta_kubernetes_pod_node_name
            regex: "true;(.*)"
            replacement: $1
            target_label: node_name
          - source_labels:
              - __meta_kubernetes_namespace
            action: replace
            target_label: kubernetes_namespace
          - source_labels:
              - __meta_kubernetes_pod_name
            action: replace
            target_label: kubernetes_pod_name
  
      - job_name: k8s-pod-15s-http-3
        scrape_interval: 15s
        scrape_timeout: 10s
        scheme: http
        kubernetes_sd_configs:
          - role: pod
            namespaces:
              names:
                - {{ .Release.Namespace }}
        relabel_configs:
          - source_labels:
              - __meta_kubernetes_pod_annotation_prometheus_io_scrape_interval3
            action: keep
            regex: '^15s$'
          - source_labels:
              - __meta_kubernetes_pod_annotation_prometheus_io_scrape_role3
            action: keep
            regex: '^pod$'
          - source_labels:
              - __address__
            regex: .*:\d+
            action: keep
          - source_labels:
              - __meta_kubernetes_pod_annotation_prometheus_io_path3
            action: replace
            regex: (.+)
            target_label: __metrics_path__
          - source_labels: [ __address__  ]
            regex: .*:(\d+)
            target_label: __tmp_container_target_port
          - source_labels: [ __meta_kubernetes_pod_annotation_prometheus_io_port3 ]
            action: keepequal
            target_label: __tmp_container_target_port
          - source_labels:
              - __meta_kubernetes_pod_container_port_name
              - __meta_kubernetes_pod_annotation_prometheus_io_scheme3
            action: keep
            regex: ^((http-.*metrics.*;http)|(http-.*metrics.*;)|(.*;http))$
          - source_labels:
              - __address__
              - __meta_kubernetes_pod_annotation_prometheus_io_port3
            action: replace
            regex: ((?:\[.+\])|(?:.+))(?::\d+);(\d+)
            replacement: $1:$2
            target_label: __address__
          - source_labels:
              - __meta_kubernetes_namespace
            action: replace
            target_label: namespace
          - source_labels:
              - __meta_kubernetes_pod_label_app_kubernetes_io_name
            action: replace
            target_label: service_name
          - source_labels:
              - __meta_kubernetes_pod_name
            action: replace
            target_label: pod_name
          - source_labels:
              - __meta_kubernetes_pod_phase
            regex: Pending|Succeeded|Failed|Completed
            action: drop
          - source_labels:
              - __meta_kubernetes_pod_annotation_prometheus_io_node_label
              - __meta_kubernetes_pod_node_name
            regex: "true;(.*)"
            replacement: $1
            target_label: node_name
          - source_labels:
              - __meta_kubernetes_namespace
            action: replace
            target_label: kubernetes_namespace
          - source_labels:
              - __meta_kubernetes_pod_name
            action: replace
            target_label: kubernetes_pod_name
  
      - job_name: k8s-pod-15s-http-4
        scrape_interval: 15s
        scrape_timeout: 10s
        scheme: http
        kubernetes_sd_configs:
          - role: pod
            namespaces:
              names:
                - {{ .Release.Namespace }}
        relabel_configs:
          - source_labels:
              - __meta_kubernetes_pod_annotation_prometheus_io_scrape_interval4
            action: keep
            regex: '^15s$'
          - source_labels:
              - __meta_kubernetes_pod_annotation_prometheus_io_scrape_role4
            action: keep
            regex: '^pod$'
          - source_labels:
              - __address__
            regex: .*:\d+
            action: keep
          - source_labels:
              - __meta_kubernetes_pod_annotation_prometheus_io_path4
            action: replace
            regex: (.+)
            target_label: __metrics_path__
          - source_labels: [ __address__  ]
            regex: .*:(\d+)
            target_label: __tmp_container_target_port
          - source_labels: [ __meta_kubernetes_pod_annotation_prometheus_io_port4 ]
            action: keepequal
            target_label: __tmp_container_target_port
          - source_labels:
              - __meta_kubernetes_pod_container_port_name
              - __meta_kubernetes_pod_annotation_prometheus_io_scheme4
            action: keep
            regex: ^((http-.*metrics.*;http)|(http-.*metrics.*;)|(.*;http))$
          - source_labels:
              - __address__
              - __meta_kubernetes_pod_annotation_prometheus_io_port4
            action: replace
            regex: ((?:\[.+\])|(?:.+))(?::\d+);(\d+)
            replacement: $1:$2
            target_label: __address__
          - source_labels:
              - __meta_kubernetes_namespace
            action: replace
            target_label: namespace
          - source_labels:
              - __meta_kubernetes_pod_label_app_kubernetes_io_name
            action: replace
            target_label: service_name
          - source_labels:
              - __meta_kubernetes_pod_name
            action: replace
            target_label: pod_name
          - source_labels:
              - __meta_kubernetes_pod_phase
            regex: Pending|Succeeded|Failed|Completed
            action: drop
          - source_labels:
              - __meta_kubernetes_pod_annotation_prometheus_io_node_label
              - __meta_kubernetes_pod_node_name
            regex: "true;(.*)"
            replacement: $1
            target_label: node_name
          - source_labels:
              - __meta_kubernetes_namespace
            action: replace
            target_label: kubernetes_namespace
          - source_labels:
              - __meta_kubernetes_pod_name
            action: replace
            target_label: kubernetes_pod_name
  
      - job_name: k8s-service-15s-http
        scrape_interval: 15s
        scrape_timeout: 10s
        scheme: http
        kubernetes_sd_configs:
          - role: service
            namespaces:
              names:
                - {{ .Release.Namespace }}
        relabel_configs:
          - source_labels:
              - __meta_kubernetes_service_annotation_prometheus_io_scrape_interval
            action: keep
            regex: '^15s$'
          - source_labels:
              - __meta_kubernetes_service_annotation_prometheus_io_scrape_role
            action: keep
            regex: '^service$'
          - source_labels:
              - __address__
            regex: .*:\d+
            action: keep
          - source_labels:
              - __meta_kubernetes_service_annotation_prometheus_io_path
            action: replace
            regex: (.+)
            target_label: __metrics_path__
          - source_labels: [ __address__  ]
            regex: .*:(\d+)
            target_label: __tmp_container_target_port
          - source_labels: [ __meta_kubernetes_service_annotation_prometheus_io_port ]
            action: keepequal
            target_label: __tmp_container_target_port
          - source_labels:
              - __meta_kubernetes_service_port_name
              - __meta_kubernetes_service_annotation_prometheus_io_scheme
            action: keep
            regex: ^((http-.*metrics.*;http)|(http-.*metrics.*;)|(.*;http))$
          - source_labels:
              - __address__
              - __meta_kubernetes_service_annotation_prometheus_io_port
            action: replace
            regex: ((?:\[.+\])|(?:.+))(?::\d+);(\d+)
            replacement: $1:$2
            target_label: __address__
          - source_labels:
              - __meta_kubernetes_namespace
            action: replace
            target_label: namespace
          - source_labels:
              - __meta_kubernetes_service_name
            action: replace
            target_label: service_name
          - source_labels:
              - __meta_kubernetes_namespace
            action: replace
            target_label: kubernetes_namespace
          - source_labels:
              - __meta_kubernetes_service_name
            action: replace
            target_label: kubernetes_name
  
      - job_name: k8s-service-15s-http-2
        scrape_interval: 15s
        scrape_timeout: 10s
        scheme: http
        kubernetes_sd_configs:
          - role: service
            namespaces:
              names:
                - {{ .Release.Namespace }}
        relabel_configs:
          - source_labels:
              - __meta_kubernetes_service_annotation_prometheus_io_scrape_interval2
            action: keep
            regex: '^15s$'
          - source_labels:
              - __meta_kubernetes_service_annotation_prometheus_io_scrape_role2
            action: keep
            regex: '^service$'
          - source_labels:
              - __address__
            regex: .*:\d+
            action: keep
          - source_labels:
              - __meta_kubernetes_service_annotation_prometheus_io_path2
            action: replace
            regex: (.+)
            target_label: __metrics_path__
          - source_labels: [ __address__  ]
            regex: .*:(\d+)
            target_label: __tmp_container_target_port
          - source_labels: [ __meta_kubernetes_service_annotation_prometheus_io_port2 ]
            action: keepequal
            target_label: __tmp_container_target_port
          - source_labels:
              - __meta_kubernetes_service_port_name
              - __meta_kubernetes_service_annotation_prometheus_io_scheme2
            action: keep
            regex: ^((http-.*metrics.*;http)|(http-.*metrics.*;)|(.*;http))$
          - source_labels:
              - __address__
              - __meta_kubernetes_service_annotation_prometheus_io_port2
            action: replace
            regex: ((?:\[.+\])|(?:.+))(?::\d+);(\d+)
            replacement: $1:$2
            target_label: __address__
          - source_labels:
              - __meta_kubernetes_namespace
            action: replace
            target_label: namespace
          - source_labels:
              - __meta_kubernetes_service_name
            action: replace
            target_label: service_name
          - source_labels:
              - __meta_kubernetes_namespace
            action: replace
            target_label: kubernetes_namespace
          - source_labels:
              - __meta_kubernetes_service_name
            action: replace
            target_label: kubernetes_name
  
      - job_name: k8s-service-15s-http-3
        scrape_interval: 15s
        scrape_timeout: 10s
        scheme: http
        kubernetes_sd_configs:
          - role: service
            namespaces:
              names:
                - {{ .Release.Namespace }}
        relabel_configs:
          - source_labels:
              - __meta_kubernetes_service_annotation_prometheus_io_scrape_interval3
            action: keep
            regex: '^15s$'
          - source_labels:
              - __meta_kubernetes_service_annotation_prometheus_io_scrape_role3
            action: keep
            regex: '^service$'
          - source_labels:
              - __address__
            regex: .*:\d+
            action: keep
          - source_labels:
              - __meta_kubernetes_service_annotation_prometheus_io_path3
            action: replace
            regex: (.+)
            target_label: __metrics_path__
          - source_labels: [ __address__  ]
            regex: .*:(\d+)
            target_label: __tmp_container_target_port
          - source_labels: [ __meta_kubernetes_service_annotation_prometheus_io_port3 ]
            action: keepequal
            target_label: __tmp_container_target_port
          - source_labels:
              - __meta_kubernetes_service_port_name
              - __meta_kubernetes_service_annotation_prometheus_io_scheme3
            action: keep
            regex: ^((http-.*metrics.*;http)|(http-.*metrics.*;)|(.*;http))$
          - source_labels:
              - __address__
              - __meta_kubernetes_service_annotation_prometheus_io_port3
            action: replace
            regex: ((?:\[.+\])|(?:.+))(?::\d+);(\d+)
            replacement: $1:$2
            target_label: __address__
          - source_labels:
              - __meta_kubernetes_namespace
            action: replace
            target_label: namespace
          - source_labels:
              - __meta_kubernetes_service_name
            action: replace
            target_label: service_name
          - source_labels:
              - __meta_kubernetes_namespace
            action: replace
            target_label: kubernetes_namespace
          - source_labels:
              - __meta_kubernetes_service_name
            action: replace
            target_label: kubernetes_name
  
      - job_name: k8s-service-15s-http-4
        scrape_interval: 15s
        scrape_timeout: 10s
        scheme: http
        kubernetes_sd_configs:
          - role: service
            namespaces:
              names:
                - {{ .Release.Namespace }}
        relabel_configs:
          - source_labels:
              - __meta_kubernetes_service_annotation_prometheus_io_scrape_interval4
            action: keep
            regex: '^15s$'
          - source_labels:
              - __meta_kubernetes_service_annotation_prometheus_io_scrape_role4
            action: keep
            regex: '^service$'
          - source_labels:
              - __address__
            regex: .*:\d+
            action: keep
          - source_labels:
              - __meta_kubernetes_service_annotation_prometheus_io_path4
            action: replace
            regex: (.+)
            target_label: __metrics_path__
          - source_labels: [ __address__  ]
            regex: .*:(\d+)
            target_label: __tmp_container_target_port
          - source_labels: [ __meta_kubernetes_service_annotation_prometheus_io_port4 ]
            action: keepequal
            target_label: __tmp_container_target_port
          - source_labels:
              - __meta_kubernetes_service_port_name
              - __meta_kubernetes_service_annotation_prometheus_io_scheme4
            action: keep
            regex: ^((http-.*metrics.*;http)|(http-.*metrics.*;)|(.*;http))$
          - source_labels:
              - __address__
              - __meta_kubernetes_service_annotation_prometheus_io_port4
            action: replace
            regex: ((?:\[.+\])|(?:.+))(?::\d+);(\d+)
            replacement: $1:$2
            target_label: __address__
          - source_labels:
              - __meta_kubernetes_namespace
            action: replace
            target_label: namespace
          - source_labels:
              - __meta_kubernetes_service_name
            action: replace
            target_label: service_name
          - source_labels:
              - __meta_kubernetes_namespace
            action: replace
            target_label: kubernetes_namespace
          - source_labels:
              - __meta_kubernetes_service_name
            action: replace
            target_label: kubernetes_name
  
      - job_name: k8s-endpoints-15s-http
        scrape_interval: 15s
        scrape_timeout: 10s
        scheme: http
        kubernetes_sd_configs:
          - role: endpoints
            namespaces:
              names:
                - {{ .Release.Namespace }}
        relabel_configs:
          - source_labels:
              - __meta_kubernetes_service_annotation_prometheus_io_scrape_interval
            action: keep
            regex: '^15s$'
          - source_labels:
              - __meta_kubernetes_service_annotation_prometheus_io_scrape_role
            action: keep
            regex: '^endpoints$'
          - source_labels:
              - __address__
            regex: .*:\d+
            action: keep
          - source_labels:
              - __meta_kubernetes_service_annotation_prometheus_io_path
            action: replace
            regex: (.+)
            target_label: __metrics_path__
          - source_labels: [ __address__  ]
            regex: .*:(\d+)
            target_label: __tmp_container_target_port
          - source_labels: [ __meta_kubernetes_service_annotation_prometheus_io_port ]
            action: keepequal
            target_label: __tmp_container_target_port
          - source_labels:
              - __meta_kubernetes_pod_container_port_name
              - __meta_kubernetes_service_annotation_prometheus_io_scheme
            action: keep
            regex: ^((http-.*metrics.*;http)|(http-.*metrics.*;)|(.*;http))$
          - source_labels:
              - __address__
              - __meta_kubernetes_service_annotation_prometheus_io_port
            action: replace
            regex: ((?:\[.+\])|(?:.+))(?::\d+);(\d+)
            replacement: $1:$2
            target_label: __address__
          - source_labels:
              - __meta_kubernetes_namespace
            action: replace
            target_label: namespace
          - source_labels:
              - __meta_kubernetes_service_name
            action: replace
            target_label: service_name
          - source_labels:
              - __meta_kubernetes_pod_name
            action: replace
            target_label: pod_name
          - source_labels:
              - __meta_kubernetes_pod_phase
            regex: Pending|Succeeded|Failed|Completed
            action: drop
          - source_labels:
              - __meta_kubernetes_service_annotation_prometheus_io_node_label
              - __meta_kubernetes_pod_node_name
            regex: "true;(.*)"
            replacement: $1
            target_label: node_name
          - source_labels:
              - __meta_kubernetes_namespace
            action: replace
            target_label: kubernetes_namespace
          - source_labels:
              - __meta_kubernetes_service_name
            action: replace
            target_label: kubernetes_name
  
      - job_name: k8s-endpoints-15s-http-2
        scrape_interval: 15s
        scrape_timeout: 10s
        scheme: http
        kubernetes_sd_configs:
          - role: endpoints
            namespaces:
              names:
                - {{ .Release.Namespace }}
        relabel_configs:
          - source_labels:
              - __meta_kubernetes_service_annotation_prometheus_io_scrape_interval2
            action: keep
            regex: '^15s$'
          - source_labels:
              - __meta_kubernetes_service_annotation_prometheus_io_scrape_role2
            action: keep
            regex: '^endpoints$'
          - source_labels:
              - __address__
            regex: .*:\d+
            action: keep
          - source_labels:
              - __meta_kubernetes_service_annotation_prometheus_io_path2
            action: replace
            regex: (.+)
            target_label: __metrics_path__
          - source_labels: [ __address__  ]
            regex: .*:(\d+)
            target_label: __tmp_container_target_port
          - source_labels: [ __meta_kubernetes_service_annotation_prometheus_io_port2 ]
            action: keepequal
            target_label: __tmp_container_target_port
          - source_labels:
              - __meta_kubernetes_pod_container_port_name
              - __meta_kubernetes_service_annotation_prometheus_io_scheme2
            action: keep
            regex: ^((http-.*metrics.*;http)|(http-.*metrics.*;)|(.*;http))$
          - source_labels:
              - __address__
              - __meta_kubernetes_service_annotation_prometheus_io_port2
            action: replace
            regex: ((?:\[.+\])|(?:.+))(?::\d+);(\d+)
            replacement: $1:$2
            target_label: __address__
          - source_labels:
              - __meta_kubernetes_namespace
            action: replace
            target_label: namespace
          - source_labels:
              - __meta_kubernetes_service_name
            action: replace
            target_label: service_name
          - source_labels:
              - __meta_kubernetes_pod_name
            action: replace
            target_label: pod_name
          - source_labels:
              - __meta_kubernetes_pod_phase
            regex: Pending|Succeeded|Failed|Completed
            action: drop
          - source_labels:
              - __meta_kubernetes_service_annotation_prometheus_io_node_label
              - __meta_kubernetes_pod_node_name
            regex: "true;(.*)"
            replacement: $1
            target_label: node_name
          - source_labels:
              - __meta_kubernetes_namespace
            action: replace
            target_label: kubernetes_namespace
          - source_labels:
              - __meta_kubernetes_service_name
            action: replace
            target_label: kubernetes_name
  
      - job_name: k8s-endpoints-15s-http-3
        scrape_interval: 15s
        scrape_timeout: 10s
        scheme: http
        kubernetes_sd_configs:
          - role: endpoints
            namespaces:
              names:
                - {{ .Release.Namespace }}
        relabel_configs:
          - source_labels:
              - __meta_kubernetes_service_annotation_prometheus_io_scrape_interval3
            action: keep
            regex: '^15s$'
          - source_labels:
              - __meta_kubernetes_service_annotation_prometheus_io_scrape_role3
            action: keep
            regex: '^endpoints$'
          - source_labels:
              - __address__
            regex: .*:\d+
            action: keep
          - source_labels:
              - __meta_kubernetes_service_annotation_prometheus_io_path3
            action: replace
            regex: (.+)
            target_label: __metrics_path__
          - source_labels: [ __address__  ]
            regex: .*:(\d+)
            target_label: __tmp_container_target_port
          - source_labels: [ __meta_kubernetes_service_annotation_prometheus_io_port3 ]
            action: keepequal
            target_label: __tmp_container_target_port
          - source_labels:
              - __meta_kubernetes_pod_container_port_name
              - __meta_kubernetes_service_annotation_prometheus_io_scheme3
            action: keep
            regex: ^((http-.*metrics.*;http)|(http-.*metrics.*;)|(.*;http))$
          - source_labels:
              - __address__
              - __meta_kubernetes_service_annotation_prometheus_io_port3
            action: replace
            regex: ((?:\[.+\])|(?:.+))(?::\d+);(\d+)
            replacement: $1:$2
            target_label: __address__
          - source_labels:
              - __meta_kubernetes_namespace
            action: replace
            target_label: namespace
          - source_labels:
              - __meta_kubernetes_service_name
            action: replace
            target_label: service_name
          - source_labels:
              - __meta_kubernetes_pod_name
            action: replace
            target_label: pod_name
          - source_labels:
              - __meta_kubernetes_pod_phase
            regex: Pending|Succeeded|Failed|Completed
            action: drop
          - source_labels:
              - __meta_kubernetes_service_annotation_prometheus_io_node_label
              - __meta_kubernetes_pod_node_name
            regex: "true;(.*)"
            replacement: $1
            target_label: node_name
          - source_labels:
              - __meta_kubernetes_namespace
            action: replace
            target_label: kubernetes_namespace
          - source_labels:
              - __meta_kubernetes_service_name
            action: replace
            target_label: kubernetes_name
  
      - job_name: k8s-endpoints-15s-http-4
        scrape_interval: 15s
        scrape_timeout: 10s
        scheme: http
        kubernetes_sd_configs:
          - role: endpoints
            namespaces:
              names:
                - {{ .Release.Namespace }}
        relabel_configs:
          - source_labels:
              - __meta_kubernetes_service_annotation_prometheus_io_scrape_interval4
            action: keep
            regex: '^15s$'
          - source_labels:
              - __meta_kubernetes_service_annotation_prometheus_io_scrape_role4
            action: keep
            regex: '^endpoints$'
          - source_labels:
              - __address__
            regex: .*:\d+
            action: keep
          - source_labels:
              - __meta_kubernetes_service_annotation_prometheus_io_path4
            action: replace
            regex: (.+)
            target_label: __metrics_path__
          - source_labels: [ __address__  ]
            regex: .*:(\d+)
            target_label: __tmp_container_target_port
          - source_labels: [ __meta_kubernetes_service_annotation_prometheus_io_port4 ]
            action: keepequal
            target_label: __tmp_container_target_port
          - source_labels:
              - __meta_kubernetes_pod_container_port_name
              - __meta_kubernetes_service_annotation_prometheus_io_scheme4
            action: keep
            regex: ^((http-.*metrics.*;http)|(http-.*metrics.*;)|(.*;http))$
          - source_labels:
              - __address__
              - __meta_kubernetes_service_annotation_prometheus_io_port4
            action: replace
            regex: ((?:\[.+\])|(?:.+))(?::\d+);(\d+)
            replacement: $1:$2
            target_label: __address__
          - source_labels:
              - __meta_kubernetes_namespace
            action: replace
            target_label: namespace
          - source_labels:
              - __meta_kubernetes_service_name
            action: replace
            target_label: service_name
          - source_labels:
              - __meta_kubernetes_pod_name
            action: replace
            target_label: pod_name
          - source_labels:
              - __meta_kubernetes_pod_phase
            regex: Pending|Succeeded|Failed|Completed
            action: drop
          - source_labels:
              - __meta_kubernetes_service_annotation_prometheus_io_node_label
              - __meta_kubernetes_pod_node_name
            regex: "true;(.*)"
            replacement: $1
            target_label: node_name
          - source_labels:
              - __meta_kubernetes_namespace
            action: replace
            target_label: kubernetes_namespace
          - source_labels:
              - __meta_kubernetes_service_name
            action: replace
            target_label: kubernetes_name


{{- end }}
{{- end }}
